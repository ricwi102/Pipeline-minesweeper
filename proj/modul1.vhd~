library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.STD_LOGIC_ARITH.all;

entity ALU is
  port (
    clk : in std_logic;
    input1 : in std_logic_vector (31 downto 0);
    input2 : in std_logic_vector (31 downto 0);
    op_ctrl : in std_logic_vector (3 downto 0);
    output : out std_logic_vector (31 downto 0);  --kanske inte ;
    );
end ALU;

architecture Behavioral of ALU is 

begin 

  process(clk) begin
    if rising_edge(clk) then
      case op_ctrl is
        when "0000" => output <= (others => '0');
	when "0001" => output <= input1;	
        when "0010" => output <= input1 + input2;
        when "0011" => output <= input1 - input2;
        when "0100" => output <= input1 * input2;
        when "0101" => output <= input1 / input2;
        when others => output <= (others => '0');
      end case;
  end process;

end Behavioral;
